# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: "**"

jobs:
  build:
    name: Build with Gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: adopt
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle
        run: ./gradlew build
          
      - name: Cache build
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./build
          key: ${{ github.sha }}
      
  test-results:    
    name: Publish JUnit test results    
    needs: build    
        
    runs-on: ubuntu-latest    
    permissions:
      checks: write
      pull-requests: write
        
    steps:    
      - name: Checkout code
        uses: actions/checkout@v3    
      
      - name: Re-use cached build
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./build
          key: ${{ github.sha }} 
              
      - name: Publish Test Results
        id: test-results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "build/test-results/**/*.xml"
          json_file: test-results.json
          check_run_annotations: skipped tests
      
      - name: Conclusion
        run: |
          echo "Conclusion is ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}"
          echo "Total tests is ${{ fromJSON( steps.test-results.outputs.json ).stats.tests }}"
          echo "Succesful tests is ${{ fromJSON( steps.test-results.outputs.json ).stats.tests_succ }}"
          echo "JSON is ${{ fromJSON( steps.test-results.outputs.json ) }}"
          pwd
          ls -la
          cat test-results.json

      - name: Set badge color
        #if: github.ref == 'refs/heads/master' # Only for master branch
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=E91500" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=44DD25" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac
          echo Test status: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}

      - name: Set total / successful test counts
        #if: github.ref == 'refs/heads/master' # Only for master branch
        shell: bash
        run: |
          echo "BADGE_TEST_TOTAL=${{ fromJSON( steps.test-results.outputs.json ).stats.tests }}" >> $GITHUB_ENV
          echo "BADGE_TEST_SUCC=${{ fromJSON( steps.test-results.outputs.json ).stats.tests_succ }}" >> $GITHUB_ENV
          echo "Successful tests: ${BADGE_TEST_SUCC}/${BADGE_TEST_TOTAL}"

      - name: Download badge from shields.io
        #if: github.ref == 'refs/heads/master' # Only for master branch
        shell: bash
        run: |
          wget "https://img.shields.io/static/v1?label=Tests&message=${BADGE_TEST_TOTAL}/${BADGE_TEST_SUCC}&color=${BADGE_COLOR}&style=for-the-badge" -O badge.svg

      - name: Upload badge to Gist
        #if: github.ref == 'refs/heads/master' # Only for master branch
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.github.com/psyGamer/40c5a8ddf8d023e49a8755d9528ab09a
          file: badge.svg
